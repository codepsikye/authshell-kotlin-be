services:
  postgres:
    image: 'postgres:15-alpine'
    container_name: kotlinbe-postgres
    environment:
      POSTGRES_DB: kotlinbe_db
      POSTGRES_USER: kotlinbe_user
      POSTGRES_PASSWORD: kotlinbe_password
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kotlinbe_user -d kotlinbe_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  app:
    image: kotlinbe:latest
    container_name: kotlinbe-app
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/kotlinbe_db
      SPRING_DATASOURCE_USERNAME: kotlinbe_user
      SPRING_DATASOURCE_PASSWORD: kotlinbe_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - '8080:8080'
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  pgadmin:
    image: 'dpage/pgadmin4:latest'
    container_name: kotlinbe-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@kotlinbe.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - '8081:80'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  default:
    name: kotlinbe-network 